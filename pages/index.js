import Head from 'next/head'
import { useState, useEffect } from 'react';

export default function Home() {
  const [xTurn, setxTurn] = useState(true);
  const [won, setWon] = useState(false);
  const [wonCombo, setWonCombo] = useState([]);
  const [modalTitle, setModalTitle] = useState("");
  const [boardData, setBoardData] = useState({
    0 : "",
    1 : "",
    2 : "",
    3 : "",
    4 : "",
    5 : "",
    6 : "",
    7 : "",
    8 : "",
  });

  const winningCombo = [
    [0,1,2],
    [3,4,5],
    [6,7,8],
    [0,3,6],
    [1,4,7],
    [2,5,8],
    [0,4,8],
    [2,4,6]
  ]

  const updateBoardData = (idx) => {
    if(!boardData[idx] && !won){
      let value = xTurn === true ? 'X' :'O';
      setBoardData({...boardData, [idx]:value});
      // setTimeout(() => {
        setxTurn(!xTurn)
      // }, 10000);
    }
  }

  // check winning
  useEffect(() => {
    checkWinner();
  }, [boardData])
  
  const checkWinner = () => {
    winningCombo.map((data) => {
      const [a,b,c] = data;
      if(boardData[a] && boardData[a] === boardData[b] && boardData[a] === boardData[c]){
        setWon(true);
        setWonCombo([a,b,c]);
        setModalTitle(`This match is won by ${!xTurn ? 'X' :'O'}`);
      } else if(Object.values(boardData).every((value) => value != '')){
        setModalTitle('Match Draw');
      }
    })
  }

  // new game
  const new_game = () => {
    setxTurn(true);
    setWon(false);
    setWonCombo([]);
    setModalTitle("");
    setBoardData({
      0 : "",
      1 : "",
      2 : "",
      3 : "",
      4 : "",
      5 : "",
      6 : "",
      7 : "",
      8 : "",
    })
  }

  return (
    <>
      <Head>
        <title>Tick Tac Toe Game</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="game">
        <h1 className='game_title'>Tick Tac Toe Game</h1>
        <div className="game__menu">
          <p className='whoose_turn'>Turn of {xTurn ? 'X ' : 'O '}</p>
        </div>
        <div className="game__board">
          {[...Array(9)].map((item, idx) => {
            return (
              <div 
                className={`square ${wonCombo.includes(idx) ? 'highlighted':''}`} 
                key={idx} 
                onClick={() => {updateBoardData(idx)}}
              >
                  <h1>{boardData[idx]}</h1>
              </div>
            )
          })}
        </div>
      </div>
      {modalTitle && <div className="restart_window">
          <div className="restart_box">
            <h4>{modalTitle}</h4>
            <button onClick={new_game}>New Game</button>
          </div>
      </div>}

    </>
  )
}
